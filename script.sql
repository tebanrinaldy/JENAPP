/*============================================================
= CREACIÓN DE USUARIO Y PERMISOS CON SYSTEM
============================================================*/

CREATE USER jenapp IDENTIFIED BY jen123
DEFAULT TABLESPACE USERS
TEMPORARY TABLESPACE TEMP
PROFILE DEFAULT
ACCOUNT UNLOCK;

/*============================================================
= 1.  SECUENCIAS
============================================================*/
CREATE SEQUENCE seq_categorias  START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
CREATE SEQUENCE seq_productos   START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
CREATE SEQUENCE seq_ventas      START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
CREATE SEQUENCE seq_detalle_ventas START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
CREATE SEQUENCE seq_reportes    START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;

/*============================================================
= 2.  TABLAS
============================================================*/

/*----------------------  CATEGORIA  -----------------------*/
CREATE TABLE categorias (
    id_categoria    NUMBER          PRIMARY KEY,
    nombre          VARCHAR2(40)    NOT NULL
);

/*----------------------  PRODUCTO  ------------------------*/
CREATE TABLE productos (
    id_producto     NUMBER          PRIMARY KEY,
    nombre          VARCHAR2(40)   NOT NULL,
    descripcion     VARCHAR2(100),
    precio          DECIMAL(10,2)    NOT NULL,
    stock           NUMBER          NOT NULL,
    id_categoria    NUMBER
);

/*----------------------  VENTAS ----------------------------*/
CREATE TABLE ventas (
    id_venta          NUMBER PRIMARY KEY,
    fecha_venta       DATE DEFAULT SYSDATE,
    total             NUMBER(10, 2),
    cedula_cliente    VARCHAR2(15),
    nombre_cliente    VARCHAR2(40),
    telefono_cliente  VARCHAR2(15)
);

/*----------------------  REPORTES --------------------------*/
CREATE TABLE reportes (
    id_reporte          NUMBER PRIMARY KEY,
    fecha_venta       DATE DEFAULT SYSDATE,
    total             NUMBER(10, 2),
    cedula_cliente    VARCHAR2(15),
    nombre_cliente    VARCHAR2(40),
    telefono_cliente  VARCHAR2(15)
);

/*----------------------  DETALLE_VENTAS --------------------*/
CREATE TABLE detalle_ventas (
    id_detalle      NUMBER PRIMARY KEY,
    id_venta        NUMBER NOT NULL,
    id_producto     NUMBER NOT NULL,
    cantidad        NUMBER(5) NOT NULL,
    preciounitario  DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (id_venta) REFERENCES ventas(id_venta),
    FOREIGN KEY (id_producto) REFERENCES productos(id_producto)
);

/*----------------------  MOVIMIENTO_INVENTARIO ------------*/
CREATE TABLE movimiento_inventario (
    id_movimiento NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    id_producto NUMBER NOT NULL,
    tipo VARCHAR2(10) CHECK (tipo IN ('Entrada', 'Salida')) NOT NULL,
    cantidad NUMBER CHECK (cantidad > 0) NOT NULL,
    fecha TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_mov_prod FOREIGN KEY (id_producto) REFERENCES productos(id_producto)
);

/*============================================================
= 3.  CLAVES FORÁNEAS Y RESTRICCIONES
============================================================*/
ALTER TABLE productos
  MODIFY id_categoria NUMBER NOT NULL;

ALTER TABLE productos
ADD CONSTRAINT fk_producto_categoria
    FOREIGN KEY (id_categoria)
    REFERENCES categorias(id_categoria);

/*============================================================
= 4.  TRIGGERS DE AUTOINCREMENTO
============================================================*/
/* CATEGORIA */
CREATE OR REPLACE TRIGGER trg_categoria_bi
BEFORE INSERT ON categorias
FOR EACH ROW
BEGIN
    IF :NEW.id_categoria IS NULL THEN
        SELECT seq_categorias.NEXTVAL INTO :NEW.id_categoria FROM dual;
    END IF;
END;
/

/* PRODUCTO */
CREATE OR REPLACE TRIGGER trg_producto_bi
BEFORE INSERT ON productos
FOR EACH ROW
BEGIN
    IF :NEW.id_producto IS NULL THEN
        SELECT seq_productos.NEXTVAL INTO :NEW.id_producto FROM dual;
    END IF;
END;
/

/* VENTA */
CREATE OR REPLACE TRIGGER trg_venta_bi
BEFORE INSERT ON ventas
FOR EACH ROW
BEGIN
    IF :NEW.id_venta IS NULL THEN
        SELECT seq_ventas.NEXTVAL INTO :NEW.id_venta FROM dual;
    END IF;
END;
/

/* DETALLE VENTA */
CREATE OR REPLACE TRIGGER trg_detalle_venta_bi
BEFORE INSERT ON detalle_ventas
FOR EACH ROW
BEGIN
    IF :NEW.id_detalle IS NULL THEN
        SELECT seq_detalle_ventas.NEXTVAL INTO :NEW.id_detalle FROM dual;
    END IF;
END;
/

/* REPORTES */
CREATE OR REPLACE TRIGGER trg_reportes_bi
BEFORE INSERT ON reportes
FOR EACH ROW
BEGIN
    IF :NEW.id_reporte IS NULL THEN
        SELECT seq_reportes.NEXTVAL INTO :NEW.id_reporte FROM dual;
    END IF;
END;
/
